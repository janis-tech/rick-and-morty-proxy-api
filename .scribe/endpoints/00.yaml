name: Characters
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/characters
    metadata:
      groupName: Characters
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a character listing.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      name:
        name: name
        description: 'The name of the character to search for. Must not be greater than 255 characters.'
        required: false
        example: 'Rick Sanchez'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'The status of the character.'
        required: false
        example: alive
        type: string
        enumValues:
          - alive
          - dead
          - unknown
        exampleWasSpecified: false
        nullable: true
        custom: []
      page:
        name: page
        description: 'The page number to retrieve. Must be at least 1.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanQueryParameters:
      name: 'Rick Sanchez'
      status: alive
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"status":"error","message":"Failed to retrieve characters: Failed to fetch data from Rick and Morty API"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/characters/{id}'
    metadata:
      groupName: Characters
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific character by ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the character.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"status":"error","message":"Character not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
